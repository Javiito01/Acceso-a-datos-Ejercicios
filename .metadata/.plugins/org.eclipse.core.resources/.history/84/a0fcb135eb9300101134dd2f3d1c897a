package categorias;

import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;

public class Inventario {
    private String nombreTienda;
    private HashMap<String, Producto> productos;

    // Complejidad: O(1)
    public Inventario(String nombreTienda) {
        this.nombreTienda = nombreTienda;
        this.productos = new HashMap<>();
    }

    // Complejidad: O(1)
    public void agregarProducto(Producto producto) {
        productos.put(producto.getCodigoProducto(), producto);
    }

    // Complejidad: O(1)
    public boolean actualizarStock(String codigoProducto, int cantidad) {
        Producto producto = productos.get(codigoProducto);
        if (producto == null) {
            System.out.println("Error: Producto con código " + codigoProducto + " no existe.");
            return false;
        }
        int nuevoStock = producto.getStock() + cantidad;
        if (nuevoStock < 0) {
            System.out.println("Error: No suficiente stock para vender " + (-cantidad) + " unidades del producto " + producto.getNombre());
            return false;
        }
        producto.setStock(nuevoStock);
        return true;
    }

    // Complejidad: O(1)
    public boolean venderProducto(String codigoProducto, int cantidad) {
        return actualizarStock(codigoProducto, -cantidad);
    }

    // Complejidad: O(1)
    public Producto buscarProducto(String codigoProducto) {
        return productos.get(codigoProducto);
    }

    // Complejidad: O(n)
    public List<Producto> productosPorCategoria(Categoria categoria) {
        List<Producto> resultado = new ArrayList<>();
        for (Producto p : productos.values()) {
            if (p.getCategoria() == categoria) {
                resultado.add(p);
            }
        }
        return resultado;
    }

    // Complejidad: O(n)
    public double precioTotalInventario() {
        double total = 0;
        for (Producto p : productos.values()) {
            total += p.valorTotalStock();
        }
        return total;
    }

    // Complejidad: O(1)
    public int tamañoInventario() {
        return productos.size();
    }

    // Complejidad: O(n)
    @Override
    public String toString() {
        String info = "Inventario tienda: " + nombreTienda + "\n" +
                      "Productos:\n";
        for (Producto p : productos.values()) {
            info += p.toString() + "\n";
        }
        info += "Cantidad total de productos distintos: " + tamañoInventario() + "\n";
        info += "Valor total del inventario: " + precioTotalInventario() + "\n";
        return info;
    }
}

